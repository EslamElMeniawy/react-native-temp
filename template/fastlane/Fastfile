default_platform(:ios)

# -------------------------------
# iOS Fastlane Configuration
# -------------------------------
platform :ios do
  desc "Manage iOS code signing"
  lane :certificates do
    match(app_identifier: 'com.tempapp', type: 'development', readonly: true)
    match(app_identifier: 'com.tempapp', type: 'appstore', readonly: true)
  end

  desc "Add badge to app icons"
  lane :set_badge do
    package = load_json(json_path: 'package.json')
    app_version = package['version']
    add_badge(shield: "#{app_version}-orange", shield_scale: "0.90", shield_gravity: "Center", no_badge: true, glob: "/ios/**/*.appiconset/*.{png,PNG}")
  end

  desc "Build and upload iOS app to TestFlight"
  lane :beta do
    certificates
    set_badge
    build_app(
      scheme: "Staging",
      workspace: "ios/TempApp.xcworkspace",
      include_bitcode: true,
      export_method: "app-store",
      clean: true
    )
    upload_to_testflight
  end

  desc "Build and upload iOS release to App Store"
  lane :release do
    certificates
    build_app(
      scheme: "Release",
      workspace: "ios/TempApp.xcworkspace",
      include_bitcode: true,
      export_method: "app-store",
      clean: true
    )
    upload_to_app_store
  end

  desc "Deploy to Firebase App Distribution (for internal testing)"
  lane :firebase do
    certificates
    set_badge
    build_app(
      scheme: "Staging",
      workspace: "ios/TempApp.xcworkspace",
      include_bitcode: true,
      export_method: "app-store",
      clean: true
    )
    firebase_app_distribution(
      app: "your-firebase-app-id",
      testers: "tester@example.com",
      release_notes: "New features and bug fixes."
    )
  end
end

# -------------------------------
# Android Fastlane Configuration
# -------------------------------
platform :android do
  desc "Add badge to app icons"
  lane :set_badge do
    package = load_json(json_path: 'package.json')
    app_version = package['version']
    add_badge(shield: "#{app_version}-orange", shield_scale: "0.90", shield_gravity: "Center", no_badge: true, glob: "/android/app/src/main/res/mipmap-*/{ic_launcher,ic_launcher_round,ic_launcher_foreground,ic_launcher_monochrome}.{png,PNG}")
  end

  desc "Build and upload Android app to Google Play (Beta)"
  lane :beta do
    set_badge
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'bundleStaging', build_type: 'Release', project_dir: 'android/')
    upload_to_play_store(track: "beta")
  end

  desc "Build and upload Android release to Google Play Store"
  lane :release do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'bundleProduction', build_type: 'Release', project_dir: 'android/')
    upload_to_play_store(track: "production")
  end

  desc "Deploy to Firebase App Distribution (for internal testing)"
  lane :firebase do
    set_badge
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assembleStaging', build_type: 'Release', project_dir: 'android/')
    firebase_app_distribution(
      app: "your-firebase-app-id",
      testers: "tester@example.com",
      release_notes: "New features and bug fixes."
    )
  end
end
